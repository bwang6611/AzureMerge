{"version":3,"sources":["components/TopSpace/Options/OnOff/index.js","store/index.js","redux/actions.js","components/TopSpace/Options/Record/index.js","components/TopSpace/Options/Slider/index.js","components/TopSpace/Options/Micvisual/index.js","components/TopSpace/Options/Save/index.js","components/TopSpace/Options/Instru/index.js","components/AzureTopSpace/AzureOptions/Key/index.js","components/AzureTopSpace/AzureOptions/Region/index.js","components/AzureTopSpace/AzureOptions/EnterButton/index.js","components/AzureTopSpace/AzureOptions/Language/index.js","components/AzureTopSpace/AzureOptions/TargetLanguage/index.js","components/AzureTopSpace/AzureOptions/index.js","components/AzureDrawer/index.js","components/AzureTopSpace/index.js","components/Drawer/index.js","components/PlaceHolder/MenuHider/index.js","components/TopSpace/Options/index.js","components/newDrawer/theme.js","components/newDrawer/index.js","components/TopSpace/index.js","components/AzureCaptions/AzureRecognition/index.js","components/AzureCaptions/index.js","components/Captions/Recognition/index.js","components/Captions/index.js","components/MiddleSpace/Loudness/AudioVisualiser.js","components/MiddleSpace/Loudness/AudioAnalyser.js","components/MiddleSpace/Loudness/index.js","components/DnD/Draggable/index.js","components/DnD/Droppable/index.js","components/MiddleSpace/index.js","components/DnD/DNDTest/index.js","components/PlaceHolder/index.js","App.js","serviceWorker.js","redux/reducers.js","index.js"],"names":["OnOff","props","dispatch","useDispatch","item","className","type","onChange","action","initialState","inputValue","initialStateRegion","initialStateSuccess","azureKeyReducer","state","Object","assign","text","store","combineReducers","azureOptions","azureKey","isSuccess","createStore","increment_textSize","decrement_textSize","increment_lineWidth","decrement_lineWidth","flip_invertColors","flip_switchMenus","flip_instructions","Record","setting","useSelector","recording","settingAzure","recordingAzure","switchToAzure","isSuccessReducer","IconButton","color","size","onClick","Slider","decrement","increment","Micvisual","mic","result","Button","variant","Save","textSize","_setting","localStorage","setItem","Instru","UserInput","temp_azure_key","getItem","undefined","value","temp","astr_str","length","substr","Array","join","handleChange","bind","handleSubmit","event","this","setState","target","alert","preventDefault","document","getElementById","onSubmit","id","placeholder","React","Component","Dropdown","title","items","multiSelect","useState","open","setOpen","selection","setSelection","toggle","handleClickOutside","tabIndex","role","onKeyPress","map","key","some","current","selectionAfterRemoval","filter","handleOnClick","azureRegionOptionsReducer","isItemInSelection","clickOutsideConfig","onClickOutside","EnterButton","LanguageOptions","selected","TargetLanguge","AzureOptions","Divider","useStyles","makeStyles","list","width","fullList","SwipeableTemporaryDrawer","classes","left","toggleDrawer","anchor","Fragment","SwipeableDrawer","onClose","onOpen","clsx","List","AzureTopSpace","style","height","MenuHider","meh","Options","lineWidth","invertColors","ins","choice","fontFamily","margin","button","switchMenus","mytheme","createMuiTheme","palette","primary","main","blue","secondary","orange","status","danger","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaperO","background","drawerPaperB","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PersistentDrawerLeft","useTheme","CssBaseline","ThemeProvider","AppBar","position","Toolbar","aria-label","edge","Typography","noWrap","Drawer","paper","direction","TopSpace","visibility","regionOption","speechConfig","audioConfig","SpeechSDK","fromDefaultMicrophoneInput","reco","AzureRecognition","line","start","stop","prevProps","prevState","isRecording","fromSubscription","speechRecognitionLanguage","out","lastRecognized","innerHTML","recognizing","s","e","capts","scrollTop","scrollHeight","clientHeight","recognized","reason","NoMatch","fromResult","canceled","console","log","swal","icon","startContinuousRecognitionAsync","stopContinuousRecognitionAsync","close","err","PureComponent","AzureCaptions","checkAzureKey","correctAzureKey","paddingString","h","sz","window","innerHeight","innerWidth","fontSize","overflow","paddingLeft","paddingRight","isCrorrect","checkKey","region","recognition","SpeechRecognition","webkitSpeechRecognition","lang","continuous","interimResults","Recognition","appendLine","onresult","words","from","results","transcript","charAt","toUpperCase","slice","isFinal","updateCurrentLine","onend","str","isScrolledToBottom","div","createElement","textContent","appendChild","Captions","AudioVisualiser","canvas","createRef","audioData","context","getContext","clearRect","drawLine","drawSpectrum","drawCircular","x","sliceWidth","beginPath","moveTo","y","lineTo","strokeStyle","iscolor","stroke","barHeight","barWidth","fillStyle","fillRect","avg","reduce","previous","i","rel","Math","cos","PI","sin","x_2","y_2","x_3","y_3","x_4","y_4","x_5","y_5","draw","ref","AudioAnalyser","Uint8Array","tick","audioContext","AudioContext","webkitAudioContext","analyser","createAnalyser","dataArray","frequencyBinCount","source","createMediaStreamSource","audio","connect","rafId","requestAnimationFrame","getByteTimeDomainData","getByteFrequencyData","cancelAnimationFrame","disconnect","Index","stopMicrophone","getMicrophone","ismic","navigator","mediaDevices","getUserMedia","video","getTracks","forEach","track","Draggable","drag","dataTransfer","setData","noAllowDrop","stopPropagation","draggable","onDragStart","onDragOver","children","Droppable","drop","data","getData","allowDrop","onDrop","Wrapper","styled","MiddleSpace","Item","droppableStyle","backgroundColor","PlaceHolder","App","enteredKey","enteredRegion","numLines","sizeString","botHeight","isEnteredKey","isEnteredRegion","isCorrectKey","topHeight","bgColor","midHeight","Boolean","location","hostname","match","allReducers","max","min","lockScreen","ReactDOM","render","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.64793075.chunk.js","sourcesContent":["import React from 'react'\r\nimport './index.css'\r\nimport { /*useSelector, */useDispatch } from 'react-redux'\r\n\r\n// This code only works if the initial state is Off. It's surprisingly way harder\r\n// to get this to work if you want the inital state of the checkbox to be checked.\r\n\r\nexport default function OnOff(props) {\r\n     //const setting = useSelector(props.setting)\r\n     // useDispatch returns the state modifying function, invoked below.\r\n     const dispatch = useDispatch()\r\n\r\n     return (\r\n          <div>\r\n               {props.item}\r\n               <label className=\"switch\">\r\n                    <input type=\"checkbox\" onChange={() => dispatch(props.action())}></input>\r\n                    <span className=\"slider\"></span>\r\n               </label>\r\n          </div>\r\n     )\r\n}\r\n","import {createStore, combineReducers} from 'redux'\n\n// 7882896e3ffc4fe3b2f4c055f0914d67 <- thats the key!!\n\nconst initialState = {\n    inputValue: 'enter'\n}\n\nconst initialStateRegion = {\n    inputValue: 'enter'\n}\n\nconst initialStateSuccess= {\n    inputValue: 'false'\n}\n\nvar azureKeyReducer = (state = initialState, action) =>{\n\n    switch(action.type) {\n        case 'INPUT_KEY':\n            return Object.assign({}, state, {inputValue: action.text });\n\n        default:\n            return state;\n    }\n}\n\nvar isSuccessReducer = (state = initialStateSuccess, action) =>{\n\n    switch(action.type) {\n        case 'INPUT_SUCCESS':\n            return Object.assign({}, state, {inputValue: action.text });\n        default:\n            return state;\n    }\n}\n\n\n\nvar azureRegionOptionsReducer = (state = initialStateRegion, action) => {\n    switch(action.type) {\n        case 'INPUT_REGION':\n            return Object.assign({}, state, {inputValue: action.text});\n\n        default:\n            return state;\n    }\n}\n\n\nconst allReducers = combineReducers({\n    azureOptions: azureRegionOptionsReducer,\n    azureKey: azureKeyReducer,\n    isSuccess: isSuccessReducer,\n});\n\n\nconst store = createStore(azureKeyReducer);\n\nexport default store;\n","// Actions are the functions that we call throughout the project to change global state.\r\n\r\nexport const set_screenWidth = (width) => {\r\n     return {\r\n          type: 'SET_SCREENWIDTH',\r\n          value: width\r\n     };\r\n}\r\n\r\nexport const set_screenHeight = (height) => {\r\n     return {\r\n          type: 'SET_SCREENHEIGHT',\r\n          value: height\r\n     };\r\n}\r\n\r\nexport const increment_textSize = () => {\r\n     return { type: 'INCREMENT_TEXTSIZE' };\r\n}\r\n\r\nexport const decrement_textSize = () => {\r\n     return { type: 'DECREMENT_TEXTSIZE' };\r\n}\r\n\r\nexport const increment_lineWidth = () => {\r\n     return { type: 'INCREMENT_LINEWIDTH' };\r\n}\r\n\r\nexport const decrement_lineWidth = () => {\r\n     return { type: 'DECREMENT_LINEWIDTH' };\r\n}\r\n\r\nexport const increment_numLines = () => {\r\n     return { type: 'INCREMENT_NUMLINES' };\r\n}\r\n\r\nexport const decrement_numLines = () => {\r\n     return { type: 'DECREMENT_NUMLINES' };\r\n}\r\n\r\nexport const flip_lockScreen = () => {\r\n     return { type: 'FLIP_LOCKSCREEN' };\r\n}\r\n\r\nexport const flip_invertColors = () => {\r\n     return { type: 'FLIP_INVERTCOLORS' };\r\n}\r\n\r\nexport const flip_switchMenus = () => {\r\n     return { type: 'FLIP_SWITCHMENUS' };\r\n}\r\nexport const flip_recording = () => {\r\n     return { type: 'FLIP_RECORDING' };\r\n}\r\n\r\nexport const flip_recording_azure = () => {\r\n     return {type: 'FLIP_RECORDING_AZURE'}\r\n}\r\n\r\nexport const azure_key = (key) => {\r\n     return {\r\n          type: 'KEY_AZURE',\r\n          key: \"dsfdsf\"\r\n     }\r\n}\r\nexport const azure_region = (region) => {\r\n     return {\r\n          type: 'AZURE_REGION',\r\n          region: \"dsfdsf\"\r\n     }\r\n}\r\nexport const flip_micVisual = () => {\r\n     return { type: 'FLIP_MICVISUAL' };\r\n}\r\nexport const flip_entered_key = () => {\r\n     return { type: 'FLIP_ENTERED_KEY' };\r\n}\r\nexport const flip_entered_region = () => {\r\n     return { type: 'FLIP_ENTERED_REGION' };\r\n}\r\nexport const flip_correct_azureKey = () => {\r\n     return { type: 'FLIP_CORRECT_AZUREKEY' };\r\n}\r\nexport const flip_switch_to_azure = () => {\r\n     return { type: 'FLIP_SWITCH_TO_AZURE' };\r\n}\r\nexport const flip_check_azureKey = () => {\r\n     return { type: 'FLIP_CHECK_AZUREKEY' };\r\n}\r\nexport const flip_instructions = () =>{\r\n     return { type: 'FLIP_INSTRUCTIONS'};\r\n}\r\n\r\nexport const flip_menuhide = () =>{\r\n     return { type: 'FLIP_MENUHIDE'};\r\n}\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport store from '../../../../store'\r\nimport './index.css'\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\r\nimport { flip_recording, flip_recording_azure } from '../../../../redux/actions'\r\n\r\nexport default function Record(props) {\r\n     const recording = (state) => state.recording\r\n     const recordingAzure = (state) => state.recordingAzure\r\n     const switchToAzure = (state) => state.switchToAzure\r\n     const setting = useSelector(recording)\r\n     const settingAzure = useSelector(recordingAzure)\r\n     const settingSwitchToAzure = useSelector(switchToAzure)// Get current value of recording.\r\n     // useDispatch returns the state modifying function, invoked below.\r\n     const dispatch = useDispatch()\r\n     // record-btn-wrapper toggles between the two buttons using the TopSpace\r\n     // hidden/shown CSS.\r\n     if (store.isSuccessReducer == 'inProgress') {\r\n       return(\r\n            <div>\r\n                 Recording\r\n                 <IconButton className = \"Play\" color= \"inherit\" size = \"large\"  >\r\n                      <PauseCircleFilledIcon className = \"pause\"/>\r\n                 </IconButton>\r\n            </div>\r\n       )\r\n     } else if (store.isSuccessReducer == 'success') {\r\n       if (settingAzure == true){\r\n          return(\r\n               <div>\r\n                    Recording\r\n                    <IconButton className = \"Play\" color= \"inherit\" size = \"large\" onClick={() => dispatch(flip_recording_azure())} >\r\n                         <PauseCircleFilledIcon className = \"pause\"/>\r\n                    </IconButton>\r\n               </div>\r\n          )\r\n     } else{\r\n          return(\r\n               <div>\r\n                    To Record\r\n                    <IconButton className = \"Play\" color= \"inherit\" size = \"large\" onClick={() => dispatch(flip_recording_azure())}>\r\n                         <PlayCircleFilledIcon className = \"start\"/>\r\n                    </IconButton>\r\n               </div>\r\n          )\r\n     }\r\n     } else {\r\n       \r\n       if (setting == true){\r\n             return(\r\n                  <div>\r\n                       Recording\r\n                       <IconButton className = \"Play\" color= \"inherit\" size = \"large\" onClick={() => dispatch(flip_recording())} >\r\n                            <PauseCircleFilledIcon className = \"pause\"/>\r\n                       </IconButton>\r\n                  </div>\r\n             )\r\n        } else{\r\n             return(\r\n                  <div>\r\n                       To Record\r\n                       <IconButton className = \"Play\" color= \"inherit\" size = \"large\" onClick={() => dispatch(flip_recording())}>\r\n                            <PlayCircleFilledIcon className = \"start\"/>\r\n                       </IconButton>\r\n                  </div>\r\n             )\r\n        }\r\n   }\r\n}\r\n","import React from 'react'\r\nimport './index.css'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n// To do: turn this into a slider. https://www.w3schools.com/howto/howto_js_rangeslider.asp\r\n\r\nexport default function Slider(props) {\r\n     const setting = useSelector(props.setting)\r\n     const dispatch = useDispatch()\r\n     return (\r\n          <div>\r\n               {props.item}\r\n               <div className=\"setting-wrapper\">\r\n                    <button className=\"minus\"\r\n                      onClick={() => dispatch(props.decrement())}>-</button>\r\n                    <div className=\"setting\">{setting}</div>\r\n                    <button className=\"plus\"\r\n                      onClick={() => dispatch(props.increment())}>+</button>\r\n               </div>\r\n          </div>\r\n     );\r\n}\r\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport './index.css'\nimport { flip_micVisual } from '../../../../redux/actions'\nimport { Button } from \"@material-ui/core\"\n\n\n// This code only works if the initial state is Off. It's surprisingly way harder\n// to get this to work if you want the inital state of the checkbox to be checked.\n\nexport default function Micvisual(props) {\n\n    const mic = (state) => state.mic\n    const setting = useSelector(mic) // Get current value of recording.\n    // useDispatch returns the state modifying function, invoked below.\n    const dispatch = useDispatch()\n    let result = \"\"\n    let text = \"\"\n\n    // flip recording when space bar is pressed\n\n     //const setting = useSelector(props.setting)\n     // useDispatch returns the state modifying function, invoked below.\n\n     if (setting == 0){\n         result = \"No Visualization\"\n         text = \"None\"\n     }else if (setting == 1){\n         result = \"Line Visualization\"\n         text = \"Line\"\n     }else if (setting == 2){\n         result = \"Spectrum Visualization\"\n         text = \"Spectrum\"\n     }else{\n         result = \"Circular Visualization\"\n         text = \"Circular\"\n     }\n\n     return (\n          <div>\n              {result}\n               <div className=\"audio_visual\">\n                    <Button className=\"audio_plus\" color = \"primary\" variant = \"outlined\"\n                         onClick={() => dispatch(flip_micVisual())} >{text}\n                    </Button>\n\n               </div>\n          </div>\n     )\n}\n\n","import React from \"react\"\nimport {useSelector} from 'react-redux'\nimport {Button} from \"@material-ui/core\"\nimport './index.css'\n\nfunction saveData(_setting){\n    localStorage.setItem('text',_setting);\n}\n\n\nexport default function Save() {\n    const textSize = (state) => state.textSize\n    const setting = useSelector(textSize)\n\n\n    return (\n        <div className = 'save-wrapper'>\n            <Button color = 'inherit' variant = 'outlined' onClick = {()=>saveData(setting)}>Save</Button>\n        </div>\n    )\n}","import React from 'react'\nimport './index.css'\nimport { useDispatch } from 'react-redux'\n\n// This code only works if the initial state is Off. It's surprisingly way harder\n// to get this to work if you want the inital state of the checkbox to be checked.\n\nexport default function Instru(props) {\n     //const setting = useSelector(props.setting)\n     // useDispatch returns the state modifying function, invoked below.\n     const dispatch = useDispatch()\n\n     return (\n          <div>\n               {props.item}\n               <label className=\"switch\">\n                    <input type=\"checkbox\" onChange={() => dispatch(props.action())}></input>\n                    <span className=\"slider\"></span>\n               </label>\n          </div>\n     )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {connect} from 'react-redux';\nimport store from '../../../../store/';\nimport { flip_entered_key, azure_key } from '../../../../redux/actions'\nimport './index.css'\n\n\nclass UserInput extends React.Component {\n\n\n  constructor(props) {\n\n    super(props);\n\n    var temp_azure_key = localStorage.getItem('azure_subscription_key');\n\n    if (store.azureKeyReducer == undefined) {\n    this.state = {value: temp_azure_key};\n    } else {\n      var temp = store.azureKeyReducer;\n      var astr_str ='';\n      if (temp.length > 5) {\n      temp = temp.substr(temp.length - 4);\n      astr_str = new Array(store.azureKeyReducer.length - 4).join( '*' );\n      }\n\n\n      this.state = {value: astr_str + temp};\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n\n    alert('A key was submitted: ' + this.state.value);\n    store.azureKeyReducer = this.state.value;\n    event.preventDefault();\n    localStorage.setItem('azure_subscription_key', this.state.value);\n\n    var temp = store.azureKeyReducer;\n    var astr_str = '';\n    //alert(temp.length);\n    if (temp.length > 5) {\n      temp = temp.substr(temp.length - 4);\n      astr_str = new Array(store.azureKeyReducer.length - 4).join( '*' );\n    }\n\n    document.getElementById(\"azure_key_value\").value = astr_str + temp;\n    this.state.value = astr_str + temp;\n  }\n\n\n\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          <div className = \"keytext\">\n            Enter Azure Key:\n          </div>\n\n          <div className = \"keybox\">\n            <input id= \"azure_key_value\" type=\"text\" placeholder= \"Azure Subscription Key\" value={this.state.value} onChange={this.handleChange} />\n          </div>\n\n        </label>\n        <br></br>\n        <br></br>\n        <div className = \"keysubmit\">\n            <input type=\"submit\" value=\"Submit\"/>\n        </div>\n\n      </form>\n    );\n  }\n}\nexport default UserInput;\n","import React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\nimport UserInput from '../Key'\nimport './index.css'\nimport store from '../../../../store/';\n\n//function concept based off of LogRocket's youtube channel\nfunction Dropdown({ title, items, multiSelect = false }) {\n  const [open, setOpen] = useState(false);\n  const [selection, setSelection] = useState([]);\n  const toggle = () => setOpen(!open);\n  Dropdown.handleClickOutside = () => setOpen(false);\n\n  function handleOnClick(item) {\n    if (!selection.some(current => current.id === item.id)) {\n      if (!multiSelect) {\n        setSelection([item]);\n      } else if (multiSelect) {\n        setSelection([...selection, item]);\n      }\n    } else {\n      let selectionAfterRemoval = selection;\n      selectionAfterRemoval = selectionAfterRemoval.filter(\n        current => current.id !== item.id\n      );\n      setSelection([...selectionAfterRemoval]);\n    }\n  }\n\n  function isItemInSelection(item) {\n    if (selection.some(current => current.id === item.id)) {\n      store.azureRegionOptionsReducer = item.value;\n      return true;\n    }\n    return false;\n  }\n\n  return (\n    <div className=\"dd-wrapper\" id =\"dd-wrapper\">\n      <div\n        tabIndex={0}\n        className=\"dd-header\"\n        role=\"button\"\n        onKeyPress={() => toggle(!open)}\n        onClick={() => toggle(!open)}\n      >\n        <div className=\"dd-header__title\" id = \"dd-header_title\">\n        <div id = \"regiontext\">\n            Select Region\n        </div>\n        </div>\n        <div className=\"dd-header__action\">\n        </div>\n      </div>\n      {open && (\n        <ul className=\"dd-list\">\n          {items.map(item => (\n            <li className=\"dd-list-item\" key={item.id}>\n              <button type=\"button\" id=\"dd-button\" onClick={() => handleOnClick(item)}>\n                <span>{item.value}</span>\n                <span>{isItemInSelection(item) && ' Selected'}</span>\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => Dropdown.handleClickOutside,\n};\n\nexport default onClickOutside(Dropdown, clickOutsideConfig);\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport './index.css'\nimport store from '../../../../store/';\nimport { flip_entered_key, flip_azure_warning} from '../../../../redux/actions'\nimport { Button } from \"@material-ui/core\"\n\n\n// This code only works if the initial state is Off. It's surprisingly way harder\n// to get this to work if you want the inital state of the checkbox to be checked.\n\nexport default function EnterButton(props) {\n    const dispatch = useDispatch()\n\n    if (store.azureRegionOptionsReducer == undefined) {\n      alert(\"Entering an Azure Key will delete the previous script.\")\n      store.azureRegionOptionsReducer = 'empty'\n    }\n    // flip recording when space bar is pressed\n\n     //const setting = useSelector(props.setting)\n     // useDispatch returns the state modifying function, invoked below.\n     // if (store.azureKeyReducer != 'empty')\n     if (store.isSuccessReducer == 'success') {\n       return (\n         <div>\n              <div className=\"setting-wrapper\">\n\n                   <div className = \"setting-button2\">\n                       <Button className=\"enter\">\n                           <div id = \"entertext\">\n                               Enter\n                           </div>\n                       </Button>\n                   </div>\n              </div>\n         </div>\n       )\n     } else {\n     return (\n          <div>\n               <div className=\"setting-wrapper\">\n                    <div className = \"setting-button2\">\n                        <Button className=\"enter\"\n                        onClick={() => dispatch(flip_entered_key())} >\n                            <div id = \"entertext\">\n                                Enter\n                            </div>\n                        </Button>\n                    </div>\n               </div>\n          </div>\n     )\n   }\n}\n","import React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\n\nexport default function LanguageOptions(props) {\n\n    return (\n        <div>\n            <select id=\"languageOptions\">\n                        <option value=\"ar-EG\">Arabic - EG</option>\n                        <option value=\"ca-ES\">Catalan - ES</option>\n                        <option value=\"da-DK\">Danish - DK</option>\n                        <option value=\"da-DK\">Danish - DK</option>\n                        <option value=\"de-DE\">German - DE</option>\n                        <option value=\"en-AU\">English - AU</option>\n                        <option value=\"en-CA\">English - CA</option>\n                        <option value=\"en-GB\">English - GB</option>\n                        <option value=\"en-IN\">English - IN</option>\n                        <option value=\"en-NZ\">English - NZ</option>\n                        <option value=\"en-US\" selected=\"selected\">English - US</option>\n                        <option value=\"es-ES\">Spanish - ES</option>\n                        <option value=\"es-MX\">Spanish - MX</option>\n                        <option value=\"fi-FI\">Finnish - FI</option>\n                        <option value=\"fr-CA\">French - CA</option>\n                        <option value=\"fr-FR\">French - FR</option>\n                        <option value=\"hi-IN\">Hindi - IN</option>\n                        <option value=\"it-IT\">Italian - IT</option>\n                        <option value=\"ja-JP\">Japanese - JP</option>\n                        <option value=\"ko-KR\">Korean - KR</option>\n                        <option value=\"nb-NO\">Norwegian - NO</option>\n                        <option value=\"nl-NL\">Dutch - NL</option>\n                        <option value=\"pl-PL\">Polish - PL</option>\n                        <option value=\"pt-BR\">Portuguese - BR</option>\n                        <option value=\"pt-PT\">Portuguese - PT</option>\n                        <option value=\"ru-RU\">Russian - RU</option>\n                        <option value=\"sv-SE\">Swedish - SE</option>\n                        <option value=\"zh-CN\">Chinese - CN</option>\n                        <option value=\"zh-HK\">Chinese - HK</option>\n                        <option value=\"zh-TW\">Chinese - TW</option>\n\n                    </select>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\n\nexport default function TargetLanguge(props) {\n\n    return (\n        <div>\n            <select id=\"targetlanguageoptions\">\n                        <option value=\"ar-\">Arabic - EG</option>\n                        <option value=\"ca\">Catalan - ES</option>\n                        <option value=\"da\">Danish - DK</option>\n                        <option value=\"da\">Danish - DK</option>\n                        <option value=\"de\">German - DE</option>\n                        <option value=\"en\">English - AU</option>\n                        <option value=\"en\">English - CA</option>\n                        <option value=\"en\">English - GB</option>\n                        <option value=\"en\">English - IN</option>\n                        <option value=\"en\">English - NZ</option>\n                        <option value=\"en\" selected=\"selected\">English - US</option>\n                        <option value=\"es\">Spanish - ES</option>\n                        <option value=\"es\">Spanish - MX</option>\n                        <option value=\"fi\">Finnish - FI</option>\n                        <option value=\"fr\">French - CA</option>\n                        <option value=\"fr\">French - FR</option>\n                        <option value=\"hi\">Hindi - IN</option>\n                        <option value=\"it\">Italian - IT</option>\n                        <option value=\"ja\">Japanese - JP</option>\n                        <option value=\"ko\">Korean - KR</option>\n                        <option value=\"nb\">Norwegian - NO</option>\n                        <option value=\"nl\">Dutch - NL</option>\n                        <option value=\"pl\">Polish - PL</option>\n                        <option value=\"pt\">Portuguese - BR</option>\n                        <option value=\"pt\">Portuguese - PT</option>\n                        <option value=\"ru\">Russian - RU</option>\n                        <option value=\"sv\">Swedish - SE</option>\n                        <option value=\"zh\">Chinese - CN</option>\n                        <option value=\"zh\">Chinese - HK</option>\n                        <option value=\"zh\">Chinese - TW</option>\n\n                    </select>\n        </div>\n    )\n}","import React from 'react'\nimport UserInput from './Key'\nimport Dropdown from './Region'\nimport AzureRecord from './AzureRecord'\nimport EnterButton from './EnterButton'\nimport { Divider } from '@material-ui/core';\nimport {\n     flip_switchMenus,\n     flip_invertColors,\n     flip_micVisual,\n     increment_textSize,\n     decrement_textSize,\n     increment_lineWidth,\n     decrement_lineWidth,\n     increment_numLines,\n     decrement_numLines\n} from '../../../redux/actions'\n\nimport store from '../../../store/';\nimport LanguageOptions from './Language'\nimport TargetLanguge from './TargetLanguage'\n\n\n\nexport default function AzureOptions() {\n    // These are functions that take an object and return an element of the object.\n    // They are passed to useSelector, which feeds the global state object into them.\nconst items = [\n  {\n    id: 1,\n    value: 'westus',\n  },\n  {\n    id: 2,\n    value: 'westus2',\n  },\n  {\n    id: 3,\n    value: 'ussouthcentral',\n  },\n  {\n    id: 4,\n    value: 'northcentralus',\n  },\n  {\n    id: 5,\n    value: 'useast',\n  },\n  {\n    id: 6,\n    value: 'useast2',\n  },\n  {\n    id: 7,\n    value: 'europewest',\n  },\n  {\n    id: 8,\n    value: 'europenorth',\n  },\n  {\n    id: 9,\n    value: 'brazilsouth',\n  },\n  {\n    id: 10,\n    value: 'australiaeast',\n  },\n  {\n    id: 11,\n    value: 'asiasoutheast',\n  },\n  {\n    id: 12,\n    value: 'asiaeast',\n  },\n];\n    return (\n         <div className=\"AzureOptions\" id=\"azure-options-space\">\n             <div className = \"azuremenutext\">\n                    <b>Microsoft Azure</b>\n              </div>\n                  <div className = \"divider\">\n                    <Divider variant=\"middle\" />\n               </div>\n\n\n\n               <div className=\"item-wrapper\">\n                  <UserInput store ={store}/>\n               </div>\n               <br></br>\n               <br></br>\n               <br></br>\n\n              <div className=\"dd-wrapper\">\n\n                    <br></br>\n\n                    <Dropdown title=\"\" items={items}/>\n              </div>\n              <div className=\"item-wrapper\">\n                   <EnterButton />\n              </div>\n              <div>\n                <div className = \"languageText\">\n                    Source Lang:\n                </div>\n                <LanguageOptions/>\n              </div>\n              <div>\n                <div className = \"transLanguageText\">\n                    Translational Lang:\n                </div>\n                <TargetLanguge/>\n              </div>\n\n         </div>\n    );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { green } from '@material-ui/core/colors';\nimport Options from \"../AzureTopSpace/AzureOptions\"\n\nconst drawerWidth = '22vw';//drawer width\nconst useStyles = makeStyles({\n  list: {\n    width: drawerWidth,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function SwipeableTemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, true)}\n    >\n      <List>\n        {/* {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))} */}\n        <Options />\n\n      </List>\n      <Divider />\n      <List>\n        {/* {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))} */}\n      </List>\n    </div>\n  );\n  return (\n    <div>\n      {['Try Out Azure'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)} color = \"primary\">{anchor}</Button>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import React from 'react'\nimport './index.css'\nimport Options from './AzureOptions'\nimport SwipeableTemporaryDrawer from '../../components/AzureDrawer'\n\n\n// JavaScript functions used: setTimeout, clearTimeout, bind, getElementById,\n// addEventListener, removeEventListener\n// React functions used: constructor, setState, componentDidMount, render\nclass AzureTopSpace extends React.Component {\n     // // When options are shown:\n     //      // Clicking in the optionsSpace triggers show() then resetTimeout().\n     //      // Clicking in the hideSpace triggers hide().\n     // // When options are not shown:\n     //      // Clicking anywhere in the outer div triggers show().\n     // // Event listeners enforce these rules in outer and optionsSpace elements.\n     // // hideSpace uses a simple onClick, which only works when the element is shown.\n     //\n     // constructor(props) {\n     //      super(props)\n     //      this.state = {\n     //           shown: true, // Whether the options area is shown. Used in JSX.\n     //           // Set 15 second timeout and when it expires, run this.hide.\n     //           // Immediately store the returned id for later use.\n     //           timeoutId: setTimeout(this.hide.bind(this), 15000)\n     //      }\n     //      // Bind functions so we can use the keyword 'this' inside them.\n     //      this.hide = this.hide.bind(this)\n     //      this.show = this.show.bind(this)\n     //      this.resetTimeout = this.resetTimeout.bind(this)\n     // }\n     //\n     // hide() { // Hide the options area from view.\n     //      this.setState({ shown: false })\n     //      document.getElementById('outer').addEventListener('click', this.show)\n     // }\n     //\n     // show() { // Show the options area. If already shown, just reset timeout.\n     //      this.setState({ shown: true })\n     //      document.getElementById('outer').removeEventListener('click', this.show)\n     //      this.resetTimeout()\n     // }\n     //\n     // resetTimeout() { // Reset the 15 second timer for hiding the options.\n     //      clearTimeout(this.state.timeoutId) // Cancel the timeout set earlier.\n     //      var toId = setTimeout(this.hide, 15000) // Set a new 15 second timeout.\n     //      this.setState({timeoutId: toId}) // Store the id of the new timeout.\n     // }\n     // // The first time the component mounts, add an event listener to the options\n     // // space, so whenever it's clicked, it shows.\n     // componentDidMount() {\n     //      document.getElementById('optionsSpace').addEventListener('click', this.show)\n     // }\n\n     render() {\n          var h = '32vh'; // I don't remember why I set the height like this.\n          // The Options component takes a function as a prop.\n          return (\n               <div className=\"AzureTopSpace\" id=\"outer\" style={{ height: h }}>\n                     <div >\n                    <div className=\"item-wrapper\">\n                        <SwipeableTemporaryDrawer color = \"secondary\"/>\n                    </div>\n                    </div>\n               </div>\n          )\n     }\n}\n\nexport default AzureTopSpace;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { green } from '@material-ui/core/colors';\nimport Options from \"../TopSpace/Options\"\n\nconst useStyles = makeStyles({\n  list: {\n    width: '20vw',\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function SwipeableTemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor,true)}\n    >\n      <List>\n        {/* {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))} */}\n        <Options />\n\n      </List>\n      <Divider />\n      <List>\n        {/* {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))} */}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      {['left'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)} color = \"primary\">{anchor}</Button>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { flip_menuhide } from '../../../redux/actions'\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nexport default function MenuHider(props){\n    const meh = (state) => state.meh;\n    const setting = useSelector(meh);\n    const dispatch = useDispatch();\n\n    if (setting == false){\n        return (\n            <div>\n                <IconButton className = \"c2\" color = \"inherit\" onClick = {()=>dispatch(flip_menuhide())}>\n                    <ArrowUpwardIcon className = 'c3' />\n                </IconButton>\n            </div>\n        )\n    }else{\n        return (\n            <div>\n                <IconButton className = \"c2\" color = \"inherit\" onClick = {()=>dispatch(flip_menuhide())}>\n                    <ArrowDownwardIcon className = 'c3' />\n                </IconButton>\n            </div>\n        )\n    }\n\n}\n","import React from 'react'\r\nimport OnOff from './OnOff'\r\nimport Record from './Record'\r\nimport Slider from './Slider'\r\nimport store from '../../../store'\r\nimport Micvisual from './Micvisual'\r\nimport Save from './Save'\r\nimport {useSelector} from \"react-redux\"\r\nimport Instru from \"./Instru\"\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AzureTopSpace from '../../AzureTopSpace'\r\nimport './index.css'\r\nimport SwipeableTemporaryDrawer from \"../../Drawer\"\r\nimport MenuHider from '../../PlaceHolder/MenuHider'\r\n\r\nimport {\r\n  flip_instructions,\r\n\r\n     flip_switchMenus,\r\n     flip_invertColors,\r\n     flip_micVisual,\r\n     increment_textSize,\r\n     decrement_textSize,\r\n     increment_lineWidth,\r\n     decrement_lineWidth,\r\n     increment_numLines,\r\n     decrement_numLines\r\n} from '../../../redux/actions'\r\n\r\nexport default function Options() {\r\n     // These are functions that take an object and return an element of the object.\r\n     // They are passed to useSelector, which feeds the global state object into them.\r\n     const textSize = (state) => state.textSize\r\n     const lineWidth = (state) => state.lineWidth\r\n     const numLines = (state) => state.numLines\r\n     const invertColors = (state) => state.invertColors\r\n     const switchMenus = (state) => state.switchMenus\r\n     const ins = (state) => state.ins\r\n     const if_ins = useSelector((state) => state.ins)\r\nvar choice = if_ins ? 'appear' : 'disappear';\r\n\r\n     var botHeight = 36\r\n     var midHeight = 32\r\n     var topHeight = 100 - botHeight + 'vh'\r\n     if (store.isSuccessReducer == 'success') {\r\n       return (\r\n            <div className=\"Options\" id=\"options-space\">\r\n                <h2 style = {{fontFamily:\"Arial\"}}>OPTIONS</h2>\r\n                <Divider/>\r\n                <div className=\"item-wrapper\">\r\n                    <Save />\r\n                 </div>\r\n                 <div className=\"item-wrapper\">\r\n                      <Slider item=\"Text size\" setting={textSize}\r\n                           increment={increment_textSize}\r\n                           decrement={decrement_textSize} />\r\n                 </div>\r\n                 <div className=\"item-wrapper\">\r\n                      <Slider item=\"Line width\" setting={lineWidth}\r\n                           increment={increment_lineWidth}\r\n                           decrement={decrement_lineWidth} />\r\n                 </div>\r\n                 <div className=\"item-wrapper\">\r\n                      <OnOff item=\"Invert colors\" setting={invertColors}\r\n                           action={flip_invertColors} />\r\n                 </div>\r\n                 <div className= \"item-wrapper\">\r\n                    <Instru item=\"Instructions\" setting = {ins}\r\n                     action = {flip_instructions} />\r\n               </div>\r\n                 <div className=\"item-wrapper\">\r\n                      <Micvisual />\r\n                 </div>\r\n                 <div className=\"item-wrapper\">\r\n                      <Record />\r\n                 </div>\r\n                 <Divider />\r\n               <div className = {choice}>\r\n                    <p style = {{margin:0}}>-The text size button can be used to change size of\r\n                    text shown in caption space.</p>\r\n                    <p style = {{margin:0}}>-There are 3 different graph can be toggled to help\r\n                    reflex the surrounding voices by clicking forth button</p>\r\n                    <p style = {{margin:0}}>-For circular graph, try to drag it around.</p>\r\n                    <p style = {{margin:0}}>-To stop captioning just click switch button for Recording. Also\r\n                    click again to resume captioning.</p>\r\n                    <p style = {{margin:0}}>-To memorize textsize option, click save after chose a proper size of the text.</p>\r\n               </div>\r\n            </div>\r\n       );\r\n     } else {\r\n     return (\r\n          <div className=\"Options\" id=\"options-space\">\r\n          <h2 style = {{fontFamily:\"Arial\"}}>OPTIONS</h2>\r\n          <Divider/>\r\n          <div className=\"item-wrapper\">\r\n              <Save />\r\n           </div>\r\n               <div className=\"item-wrapper\">\r\n                    <Slider item=\"Text size\" setting={textSize}\r\n                         increment={increment_textSize}\r\n                         decrement={decrement_textSize} />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                    <Slider item=\"Line width\" setting={lineWidth}\r\n                         increment={increment_lineWidth}\r\n                         decrement={decrement_lineWidth} />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                    <OnOff item=\"Invert colors\" setting={invertColors}\r\n                         action={flip_invertColors} />\r\n               </div>\r\n               <div className= \"item-wrapper\">\r\n                    <Instru item=\"Instructions\" setting = {ins}\r\n                     action = {flip_instructions} />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                    <Micvisual />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                    <Record />\r\n               </div>\r\n               <div className=\"item-wrapper\">\r\n                    <AzureTopSpace button=\"Switch To Azure\" setting={switchMenus}\r\n                         action={flip_switchMenus} />\r\n               </div>\r\n               <Divider />\r\n               <div className = {choice}>\r\n                    <p style = {{margin:0}}>-The text size button can be used to change size of\r\n                    text shown in caption space.</p>\r\n                    <p style = {{margin:0}}>-There are 3 different graph can be toggled to help\r\n                    reflex the surrounding voices by clicking forth button</p>\r\n                    <p style = {{margin:0}}>-For circular graph, try to drag it around.</p>\r\n                    <p style = {{margin:0}}>-To stop captioning just click switch button for Recording. Also\r\n                    click again to resume captioning.</p>\r\n                    <p style = {{margin:0}}>-To memorize textsize option, click save after chose a proper size of the text.</p>\r\n               </div>\r\n          </div>\r\n     );\r\n   }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport blue from '@material-ui/core/colors/blue';\nimport orange from '@material-ui/core/colors/orange';\n\n\nconst mytheme = createMuiTheme({\n  palette: {\n    primary: {\n        main:blue[900]\n    },\n    secondary: {\n        main:orange[800]\n    },\n  },\n  status: {\n    danger: 'orange',\n  },\n});\n\nexport default mytheme;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Options from \"../TopSpace/Options\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport mytheme from './theme'\nimport blue from \"@material-ui/core/colors/blue\"\nimport orange from \"@material-ui/core/colors/orange\"\n\n\nconst drawerWidth = '20vw';//drawer width\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaperO: {\n    width: drawerWidth,\n    background: orange[800],\n  },\n  drawerPaperB: {\n    width: drawerWidth,\n    background: blue[800],\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function PersistentDrawerLeft(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  var bgColor = props.color;\n  var choice = \"primary\";\n  if (bgColor == \"black\"){\n    choice = \"primary\";\n  }else{\n    choice = \"secondary\";\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n\n      <div className={classes.root}>\n        <CssBaseline />\n        <ThemeProvider theme = {mytheme}>\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n          color = {choice}\n        >\n          <Toolbar >\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              Welcome to ScribeAR\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <Drawer\n          className={classes.drawer}\n          width = \"50%\"\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          // classes={bgColor == 'black' ? {\n          //   paper: classes.drawerPaperO,\n          // }:{\n          //   paper: classes.drawerPaperB,\n          // }}\n          classes = {{paper:classes.drawerPaper}}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose} color = \"inherit\">\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n\n          <List>\n              <Options />\n\n          </List>\n\n          <List>\n\n          </List>\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n\n        </main>\n        </ThemeProvider>\n      </div>\n  );\n}\n","import React from 'react'\r\nimport './index.css'\r\nimport '../MiddleSpace/index.css'\r\nimport PersistentDrawerLeft from '../newDrawer'\r\nimport {useSelector} from 'react-redux'\r\n\r\n// JavaScript functions used: setTimeout, clearTimeout, bind, getElementById,\r\n// addEventListener, removeEventListener\r\n// React functions used: constructor, setState, componentDidMount, render\r\nexport default function TopSpace(props){\r\n\r\n          var h = '9vh'; // I don't remember why I set the height like this.\r\n          // The Options component takes a function as a prop.\r\n          const meh = (state) => state.meh\r\n          const setting = useSelector(meh)\r\n          var choice = setting ? \"hidden\" : \"visible\"\r\n          return (\r\n               <div className=\"TopSpace\" id=\"outer\" style={{ height: h , visibility:choice}}>\r\n                    <div >\r\n                          <div className=\"item-wrapper\" >\r\n                              <PersistentDrawerLeft color = {props.color}/>\r\n                         </div>\r\n\r\n                    </div>\r\n               </div>\r\n          )\r\n}\r\n","import React from 'react'\nimport { isPureish } from '@babel/types';\nimport * as SpeechSDK from 'microsoft-cognitiveservices-speech-sdk'\nimport AzureKey from '../../AzureTopSpace/AzureOptions/Key';\nimport store from '../../../store/';\nimport {useSelector, connect} from 'react-redux'\nimport {bindActionCreators} from \"redux\"\nimport swal from 'sweetalert';\n\n\n//const key = (state) =>state.azureKey\n//7882896e3ffc4fe3b2f4c055f0914d67\nvar key = 'empty';\nvar regionOption = 'empty';\nvar lang = 'en-US';\nvar correctKey = true;\nvar speechConfig = null;\nconst audioConfig = SpeechSDK.AudioConfig.fromDefaultMicrophoneInput();\nvar reco = null;\n\nclass AzureRecognition extends React.PureComponent {\n    constructor() {\n        super()\n        this.state = {\n           line: '',\n        }\n        //this.appendLine = this.appendLine.bind(this)\n        this.start = this.start.bind(this)\n        this.stop = this.stop.bind(this)\n    }\n\n    componentDidMount() {\n      alert(\"After pressing OK, please allow the the program to confirm Azure key authentication by listening to speech\")\n\n        this.start()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.isRecording === this.props.isRecording) {\n             return\n           }\n        if (this.props.isRecording) {\n             this.start()\n           }\n        else {\n          this.stop()\n        }\n   }\n    start() {\n      if (store.isSuccessReducer != 'success') {\n        store.isSuccessReducer = 'inProgress';\n        if (store.azureKeyReducer == undefined || store.azureRegionOptionsReducer == undefined || store.azureKeyReducer == '' || store.azureRegionOptionsReducer == '') {\n          store.azureKeyReducer = 'empty'\n          store.azureRegionOptionsReducer = 'empty'\n        } else {\n          key = store.azureKeyReducer;\n          regionOption = store.azureRegionOptionsReducer;\n        }\n        speechConfig = SpeechSDK.SpeechConfig.fromSubscription(key, regionOption);\n        speechConfig.speechRecognitionLanguage = lang;\n      }\n        reco = new SpeechSDK.SpeechRecognizer(speechConfig, audioConfig);\n        var out = document.getElementById('out');\n        var lastRecognized = out.innerHTML;\n        reco.recognizing = function(s, e) {\n\n            if (store.isSuccessReducer != 'success') {\n              alert(\"Success\")\n            }\n            store.isSuccessReducer = 'success';\n            //window.console.log(e);\n            out.innerHTML = lastRecognized + e.result.text;\n\n            const capts = document.getElementById('captionsSpace')\n            capts.scrollTop = capts.scrollHeight - capts.clientHeight // scroll to bottom\n\n        }\n        reco.recognized = function (s,e) {\n            //window.console.log(e);\n            if(e.result.reason == SpeechSDK.ResultReason.NoMatch) {\n                var noMatchDetail = SpeechSDK.NoMatchDetails.fromResult(e.result);\n            }\n            lastRecognized += e.result.text + \"\\r\\n\";\n            out.innerHTML = lastRecognized;\n        }\n        reco.canceled = function(s, e) {\n          console.log(\"lol that didnt work eheheheh\")\n          store.isSuccessReducer = 'failure'\n          store.azureRegionOptionsReducer = 'incorrect'\n          store.azureKeyReducer = 'incorrect'\n          swal({\n                title: \"Warning!\",\n                text: \"Wrong key or region!\",\n                icon: \"warning\",\n            })\n          this.stop()\n        }\n        reco.startContinuousRecognitionAsync();\n    }\n\n    stop() {\n        reco.stopContinuousRecognitionAsync(\n            function() {\n                reco.close();\n                reco = undefined;\n            },\n            function (err) {\n                reco.close();\n                reco = undefined;\n            }\n        )\n    }\n    render() {\n        // out holds all past lines. curr holds the current line.\n        console.log(\"render\")\n        return (\n             <div>\n                  <div id='out'></div>\n                    <p>{this.props.key}</p>\n             </div>\n        )\n   }\n}\n\nexport default AzureRecognition\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport './index.css'\nimport AzureRecognition from './AzureRecognition'\nimport store from '../../store'\nimport keys from '../AzureTopSpace/AzureOptions/Key'\nimport { flip_correct_azureKey, flip_check_azureKey } from '../../redux/actions'\n\n\n\nexport default function AzureCaptions(props) {\n\n     const dispatch = useDispatch()\n     const lineWidth = useSelector((state) => state.lineWidth)\n     const recording = useSelector((state) => state.recordingAzure)\n     const checkAzureKey = useSelector((state) => state.checkAzureKey)\n     const correctAzureKey = useSelector((state) => state.correctAzureKey)\n     // Sloppy styling. Please change.\n     var paddingString = (11 - lineWidth) * 3 + 'vw'\n     var h = props.height\n     var sz = props.textSize\n     var wid = \"calc(100vh - 2 * \" + paddingString + \")\"\n     if(window.innerHeight > window.innerWidth) {\n       wid = \"calc(100vw - 2 * \" + paddingString + \")\"\n     }\n       return ( <div className=\"captionsSpace\" id=\"captionsSpace\"\n            style={{\n              fontSize: sz,\n              height: h,\n              width: \"90vw\",\n              overflow: \"auto\",\n              // backgroundColor: \"blue\",\n              paddingLeft: paddingString,\n              paddingRight: paddingString }}>\n                 <AzureRecognition isRecording = {recording} isCrorrect = {correctAzureKey} checkKey = {checkAzureKey}\n                  key = {store.azureKeyReducer} region = {store.azureRegionOptionsReducer} />\n            </div> )\n\n}\n","import React from 'react'\r\nimport store from '../../../store/';\r\n\r\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\r\nconst recognition = new SpeechRecognition()\r\n\r\nrecognition.lang = 'en-US'\r\nrecognition.continuous = false\r\nrecognition.interimResults = true\r\n\r\n// In this document, a 'line' is more like a sentence.\r\n// this.state.line is like a buffer of text held at the end of the page. When the line\r\n// is finished, the buffer is flushed: a new div is appended to the 'out' div and\r\n// this.state.line is reset for the next line.\r\n\r\nclass Recognition extends React.PureComponent {\r\n     constructor() {\r\n          super()\r\n          this.state = {\r\n               line: '',\r\n               //recording: true\r\n          }\r\n          this.appendLine = this.appendLine.bind(this)\r\n          this.start = this.start.bind(this)\r\n          this.stop = this.stop.bind(this)\r\n     }\r\n\r\n     componentDidMount() {\r\n\r\n        if (store.azureKeyReducer == undefined) {\r\n          this.start()\r\n        }  else {\r\n          this.stop()\r\n        }\r\n     }\r\n\r\n     // Global state 'recording' is passed as a prop. componentDidUpdate is invoked\r\n     // when props change, therefore also when 'recording' changes.\r\n     componentDidUpdate(prevProps, prevState) {\r\n          if (prevProps.isRecording === this.props.isRecording)\r\n               return\r\n          if (this.props.isRecording)\r\n               this.start()\r\n          else this.stop()\r\n     }\r\n\r\n     start() {\r\n\r\n          recognition.start()\r\n          // Map the complex recognition result object to a string. You can explore\r\n          // the full object with console.log(e).\r\n          recognition.onresult = (e) => {\r\n               let words = Array.from(e.results)\r\n                 .map(result => result[0])\r\n                 .map(result => result.transcript)\r\n                 .join('');\r\n               words = words.charAt(0).toUpperCase() + words.slice(1)\r\n               if (e.results[0].isFinal) // if line is final\r\n                    this.appendLine(words + '.') // flush buffer\r\n               else this.updateCurrentLine(words) // update state\r\n          }\r\n          // By default, recognition stops when it gets a final result.\r\n          recognition.onend = recognition.start // override this behavior\r\n     }\r\n\r\n     stop() {\r\n          recognition.onresult = () => {} // do nothing with results\r\n          recognition.onend = () => {} // don't restart when ending\r\n          recognition.stop()\r\n     }\r\n\r\n     updateCurrentLine(str) {\r\n          const capts = document.getElementById('captionsSpace')\r\n          var isScrolledToBottom = capts.scrollHeight - capts.clientHeight <= capts.scrollTop + 1\r\n          this.setState({ line: str })\r\n          if (isScrolledToBottom)\r\n               capts.scrollTop = capts.scrollHeight - capts.clientHeight\r\n     }\r\n\r\n     appendLine(str) {\r\n          const capts = document.getElementById('captionsSpace')\r\n          const out = document.getElementById('out')\r\n          var isScrolledToBottom = capts.scrollHeight - capts.clientHeight <= capts.scrollTop + 1\r\n          var div = document.createElement('div') // create new div\r\n          div.textContent = str // set new div's text to the updated current line\r\n          out.appendChild(div) // add the new div to the document inside 'out' element\r\n          this.setState({ line: '' }) // reset line\r\n          if (isScrolledToBottom)\r\n               capts.scrollTop = capts.scrollHeight - capts.clientHeight // scroll to bottom\r\n     }\r\n\r\n     render() {\r\n          // out holds all past lines. curr holds the current line.\r\n          return (\r\n               <div>\r\n                    <div id='out'></div>\r\n                    <div id='curr'>{this.state.line}</div>\r\n               </div>\r\n          )\r\n     }\r\n}\r\n\r\nexport default Recognition\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './index.css'\r\nimport Recognition from './Recognition'\r\n\r\nexport default function Captions(props) {\r\n     const lineWidth = useSelector((state) => state.lineWidth)\r\n     const recording = useSelector((state) => state.recording)\r\n     // Sloppy styling. Please change.\r\n     var paddingString = (11 - lineWidth) * 3 + 'vw'\r\n     var h = props.height\r\n     var sz = props.textSize\r\n     return ( <div className=\"captionsSpace\" id=\"captionsSpace\"\r\n          style={{\r\n            fontSize: sz,\r\n            height: h,\r\n            width: \"90vw\",\r\n            overflow: \"auto\",\r\n            paddingLeft: paddingString,\r\n            paddingRight: paddingString }}>\r\n               <p className = \"tutorial\">Welcome to ScribeAR</p>\r\n               <p className = \"tutorial\">There are some tips for you to start to use ScribeAR,</p>\r\n               <p className = \"tutorial\">Click button on the upperleft to open the menu.</p>\r\n               <p className = \"tutorial\">Detailed instructions can be found in option menu.</p>\r\n               <Recognition isRecording={recording} />\r\n          </div> )\r\n}\r\n","import React, { Component } from 'react';\n\n\n\nclass AudioVisualiser extends Component {\n\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n  }\n  draw() {\n      const { audioData } = this.props;\n      const canvas = this.canvas.current;\n      const height = canvas.height;\n      const width = canvas.width;\n      const context = canvas.getContext('2d');\n      context.clearRect(0, 0, width, height);\n\n      if (this.props.mic == 1){ // Line visualization\n          this.drawLine(audioData,context,height,width);\n      }\n      else if (this.props.mic == 2){// Spectrum visualization\n          this.drawSpectrum(audioData,context,height,width);\n      }\n      else if (this.props.mic == 3){// Circular visualization\n          this.drawCircular(audioData,context,height,width);\n      }\n\n\n}\n\ndrawLine(audioData,context,height,width){\n       let x = 0;\n       const sliceWidth = (width * 1.0) / audioData.length;\n      context.lineWidth = 2;\n      context.beginPath();\n      context.moveTo(0, height / 2);\n      for (const item of audioData) {\n          const y = (item / 255.0) * height;\n          context.lineTo(x, y);\n          x += sliceWidth;\n      }\n      context.lineTo(x, height / 2);\n      context.strokeStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n      context.stroke();\n}\n\ndrawSpectrum(audioData,context,height,width){\n      let x = 0;\n      const barWidth = (width / audioData.length) * 2.5;\n      let barHeight;\n      for(const item of audioData) {\n          barHeight = item/2;\n          context.fillStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n          context.fillRect(x,height/2-barHeight/2,barWidth,barHeight);\n          x += barWidth + 1;\n          }\n\n}\n\ndrawCircular(audioData,context,height,width){\n      const RADIUS = 80;\n      const POINTS = 360;\n      let sum = audioData.reduce((previous, current) => current += previous);\n      let avg = sum / audioData.length;\n\n      for(let i = 0; i < POINTS; i++) {\n          let rel = ~~(i * (POINTS/audioData.length));\n          let x = width/2 + RADIUS * Math.cos( (i * 2 * Math.PI) / POINTS );\n          let y = height/2 + RADIUS * -Math.sin( (i * 2 * Math.PI) / POINTS );\n          let x_2 = x + (audioData[rel]/4) * Math.cos( (i * 2 * Math.PI) / POINTS );\n          let y_2 = y + (audioData[rel]/4) * -Math.sin( (i * 2 * Math.PI) / POINTS );\n          let x_3 = width/2 + 1 *  avg * Math.cos((i * 2 * Math.PI) / POINTS );\n          let y_3 = height/2 + 1 * avg * -Math.sin((i * 2 * Math.PI) / POINTS );\n          let x_4 = x_3 - 0.5 *  avg * Math.cos((i * 2 * Math.PI) / POINTS );\n          let y_4 = y_3 - 0.5 * avg * -Math.sin((i * 2 * Math.PI) / POINTS );\n          let x_5 = x - 0.3  * Math.cos((i * 2 * Math.PI) / POINTS );\n          let y_5 = y - 0.3  * -Math.sin((i * 2 * Math.PI) / POINTS);\n          //draw the circular spectrum\n          context.beginPath();\n          context.moveTo(x, y);\n          context.lineTo(x_2, y_2);\n          context.strokeStyle = this.props.iscolor ? '#000000' : '#F8F8FF';\n          context.stroke();\n          //draw the margin circle\n          context.beginPath();\n          context.moveTo(x,y);\n          context.lineTo(x_5,y_5);\n          context.stroke();\n          //draw the inner circlew\n          context.beginPath();\n          context.moveTo(x_4,y_4);\n          context.lineTo(x_3,y_3);\n          if(y_4 - y_3 > 10){\n              context.strokeStyle = '#ff0000';\n          }\n          context.stroke();\n          }\n\n}\ncomponentDidUpdate() {\n    this.draw();\n  }\n\n  render() {\n      let width = \"1700vw\"\n      if (this.props.mic == 1){\n          width = \"1800vw\"\n      }else if (this.props.mic == 2){\n          width = \"1600vw\"\n      }else if (this.props.mic == 3){\n          width = \"400vw\"\n\n      }\n\n    return <canvas width={width} height=\"300vh\" ref={this.canvas} />;\n  }\n\n}\n\nexport default AudioVisualiser;\n","import React, {Component } from 'react';\nimport AudioVisualiser from './AudioVisualiser'\n\n\n/*global Unit8Array*/\n\n\nclass AudioAnalyser extends Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n                audioData : new Uint8Array(0)\n          };\n          this.tick = this.tick.bind(this);\n     }\n\n     componentDidMount() {\n     this.audioContext = new (window.AudioContext ||\n       window.webkitAudioContext)();\n     this.analyser = this.audioContext.createAnalyser();\n     this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n     this.source = this.audioContext.createMediaStreamSource(this.props.audio);\n     this.source.connect(this.analyser);\n     this.rafId = requestAnimationFrame(this.tick);\n   }\n\n     tick() {\n         if (this.props.mic == 1){\n             //console.log(\"1\");n\n             this.analyser.getByteTimeDomainData(this.dataArray);\n         }else if (this.props.mic == 2){\n             //console.log(\"2\");\n             this.analyser.getByteFrequencyData(this.dataArray);\n         }else if (this.props.mic == 3){\n             this.analyser.getByteFrequencyData(this.dataArray);\n             //this.analyser.getByteTimeDomainData(this.dataArray);\n         }\n     this.setState({ audioData: this.dataArray });\n     this.rafId = requestAnimationFrame(this.tick);\n   }\n\n   componentWillUnmount() {\n    cancelAnimationFrame(this.rafId);\n    this.analyser.disconnect();\n    this.source.disconnect();\n  }\n\n  render() {\n      return <AudioVisualiser audioData={this.state.audioData} iscolor = {this.props.iscolor} mic = {this.props.mic}/>;\n    }\n\n\n}\n\nexport default AudioAnalyser;\n","import React from 'react';\nimport AudioAnalyser from './AudioAnalyser';\n\n\nclass Index extends React.PureComponent {\n  constructor() {\n   super()\n   this.state = {\n     audio: null\n   };\n\n  //this.toggleMicrophone = this.toggleMicrophone.bind(this);\n  this.stopMicrophone = this.stopMicrophone.bind(this);\n  this.getMicrophone = this.getMicrophone.bind(this);\n }\n\n\n\n componentDidUpdate(prevProps,prevState) {\n   if(prevProps.ismic === this.props.ismic)\n      return\n   if(this.props.ismic > 0){\n      this.getMicrophone()\n    }\n   else this.stopMicrophone()\n }\n\n async getMicrophone() {\n    const audio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    });\n    this.setState({ audio });\n  }\n\n  stopMicrophone() {\n     this.state.audio.getTracks().forEach(track => track.stop());\n     this.setState({ audio: null });\n   }\n\n\n  render() {\n     return (\n\n         <div className=\"controls\" >\n           {this.state.audio ? <AudioAnalyser audio={this.state.audio}  iscolor = {this.props.iscolor}  mic = {this.props.ismic}/> : ''}\n         </div>\n\n     );\n   }\n}\n\nexport default Index;\n\n// <button onClick={this.toggleMicrophone} style = {{\n//   position:\"fixed\",\n//   top:\"35vh\",\n//   left:\"65vw\",\n//   width:\"10vw\",\n//   height:\"10vh\",\n//   fontSize: \"1.5vw\",\n//   textAlign: \"left\"\n// }}>\n//   {this.state.audio ? 'Stop MIC' : 'Get MIC input'}\n// </button>\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Draggable extends React.Component{\n\n    drag = (e) => {\n        e.dataTransfer.setData('transfer',e.target.id);\n    }\n\n    noAllowDrop = (e) => {\n        e.stopPropagation();\n    }\n\n    render(){\n        return (\n            <div id= {this.props.id} draggable = \"true\" onDragStart={this.drag} \n            onDragOver= {this.noAllowDrop} style = {this.props.style}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nDraggable.propTypes = {\n    id : PropTypes.string,\n    style: PropTypes.object,\n    children: PropTypes.node,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Droppable extends React.Component{\n    drop = (e) =>{\n        e.preventDefault();\n        const data = e.dataTransfer.getData('transfer');\n        e.target.appendChild(document.getElementById(data));\n    }\n\n    allowDrop = (e) =>{\n        e.preventDefault();\n    }\n\n    render(){\n        return (\n            <div id = {this.props.id} onDrop = {this.drop} onDragOver = {this.allowDrop} style = {this.props.style}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nDroppable.propTypes = {\n    id : PropTypes.string,\n    style: PropTypes.object,\n    children: PropTypes.node,\n}","import React from 'react'\nimport Index from './Loudness/index'\nimport './index.css'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport Draggable from '../DnD/Draggable'\nimport Droppable from '../DnD/Droppable'\nimport './index.css'\n\n\nconst Wrapper = styled.div`\n    width:100%;\n    padding:32px;\n    display:flex;\n    justify-content: center;\n`;\n\n\nconst droppableStyle = {\n    backgroundColor: '#555',\n    width:'50vw',\n    height: '32vh',\n    margin: '1px'\n};\n \nexport default function MiddleSpace(props) {\n  var h = props.height\n  const mic = useSelector((state) => state.mic)\n  const color = useSelector((state) => state.invertColors)\n //  var wid = \"calc(100vh - 2 * \" + paddingString + \")\"\n //  if(window.innerHeight > window.innerWidth) {\n //    wid = \"calc(100vw - 2 * \" + paddingString + \")\"\n //  }\n\n  if (props.color == 'black'){\n      return ( <div className=\"MiddleSpace\">    \n            <Wrapper>\n                  <Droppable className = \"d1\" id = \"dr1\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                    <div className = \"show1\">\n                      <Draggable id = \"item1\" style = {{margin:'8px'}}>\n                        \n                          <Index ismic = {mic} iscolor = {color} style={{\n                          position:\"relative\",\n                          }}/> \n                       \n                      </Draggable>\n                      </div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d1\" id = \"dr2\" style = {{\n                    width:'25vw',\n\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n              </Wrapper>\n          </div> )\n  }else{\n    return ( <div className=\"MiddleSpace\">    \n            <Wrapper>\n                  <Droppable className = \"d2\" id = \"dr1\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                    <div className = \"show1\">      \n\n                      <Draggable id = \"item1\" style = {{margin:'8px'}}><Index ismic = {mic} iscolor = {color} style={{\n                        position:\"relative\",\n                      }}/> \n                    </Draggable>\n                    </div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n                  </Droppable>\n                  <Droppable className = \"d2\" id = \"dr2\" style = {{\n                    width:'25vw',\n                    height: '34vh',\n                    margin: '1px'}}>\n                      <div className = \"show1\"></div>\n\n                  </Droppable>\n              </Wrapper>\n          </div> )\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components'\nimport Draggable from '../Draggable'\nimport Droppable from '../Droppable'\n\nconst Wrapper = styled.div`\n    width:100%;\n    padding:32px;\n    display:flex;\n    justify-content: center;\n`;\n\nconst Item = styled.div`\n    padding:8px;\n    color:#555;\n    background-color: white;\n    border-radius:3px;\n`;\n\nconst droppableStyle = {\n    backgroundColor: '#555',\n    width:'250px',\n    height: '400px',\n    margin: '32px'\n};\n\nexport default class DNDTest extends React.Component{\n    render(){\n        return (\n            <Wrapper>\n                <Droppable id = \"dr1\" style = {droppableStyle}>\n                    <Draggable id = \"item1\" style = {{margin:'8px'}}><Item>Some text</Item></Draggable>\n                    <Draggable id = \"item2\" style = {{margin:'8px'}}><Item>Some other text</Item></Draggable>\n                </Droppable>\n                <Droppable id = \"dr2\" style = {droppableStyle}>\n\n                </Droppable>\n            </Wrapper>\n        )\n    }\n}\n","import React from 'react'\nimport './index.css'\nimport MenuHider from './MenuHider'\n\n\nexport default function PlaceHolder(props){\n        var sz = props.textSize;\n        return <div className = \"PlaceHolder\" style = {\n            {\n                fontSize:sz,\n            }\n        }>\n            <MenuHider />\n        </div>\n}","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport TopSpace from './components/TopSpace'\nimport AzureTopSpace from './components/AzureTopSpace'\nimport AzureCaptions from './components/AzureCaptions'\nimport Captions from './components/Captions'\nimport MiddleSpace from './components/MiddleSpace'\nimport DNDTest from './components/DnD/DNDTest'\nimport PlaceHolder from \"./components/PlaceHolder\"\nimport { flip_recording, flip_switch_to_azure,\n         flip_switchMenus, flip_entered_key,\n         flip_correct_azureKey,\n         flip_check_azureKey,\n         flip_entered_region } from './redux/actions'\nimport store from './store'\nimport './App.css'\n\nexport default function App() {\n     const dispatch = useDispatch()\n     const enteredKey = useSelector((state) => state.enteredKey)\n     const enteredRegion = useSelector((state) => state.enteredRegion)\n     const correctAzureKey = useSelector((state) => state.correctAzureKey)\n     const checkAzureKey = useSelector((state) => state.checkAzureKey)\n     // Get global state from Redux. See the React Redux tutorial.\n     const textSize = useSelector((state) => state.textSize)\n     const recording = useSelector((state) => state.recording)\n     const numLines = useSelector((state) => state.numLines)\n     const invertColors = useSelector((state) => state.invertColors)\n     const switchMenus = useSelector((state)=> state.switchMenus)\n     const switchToAzure = useSelector((state) => state.switchToAzure)\n     // Convert variables to CSS-friendly strings.\n     var sizeString = textSize + 'vh'\n     // Size of bottom space (text area) relative to text size and number of lines.\n     // 1.5 is an estimate of the ratio of line size to text size.\n     // This is a sloppy way of calculating the height. Please improve on this.\n     var botHeight = 36\n     // topHeight + botHeight should always = 100vh because we don't want the full\n     // page to scroll (we only want the individual areas to scroll).\n\n\n     //checkAzureKey is changed changed HERE in normal return\n     //isCorrectKey is done in AzureCaptions\n     //azureKeyEntered is done in enter button\n\n     var isRecording = recording ? true : false\n     var switchmenus = switchMenus ? false : true\n     var isEnteredKey = enteredKey ? true : false\n     var isEnteredRegion = enteredRegion ? true : false\n     var isCorrectKey = correctAzureKey ? true : false\n     var isChecking = checkAzureKey ? true : false\n     var wantsAzure = switchToAzure ? true : false\n     var midHeight = 32\n     var topHeight = 100 - botHeight + 'vh'\n     midHeight += 'vh'\n     botHeight += 'vh'\n     var bgColor = invertColors ? 'white': 'black'\n     var color = invertColors ? 'black' : 'white'\n\n     if (store.azureKeyReducer == 'incorrect' && checkAzureKey == true) {\n       store.azureKeyReducer = 'empty'\n       dispatch(flip_entered_key())\n       dispatch(flip_entered_region())\n       dispatch(flip_check_azureKey())\n     }\n     if (store.isSuccessReducer == 'success' && isCorrectKey == false) {\n       dispatch(flip_correct_azureKey())\n     }\n     if (bgColor == 'black') {\n     if (checkAzureKey == true || isCorrectKey == true) {\n       if (isRecording == true) {\n         dispatch(flip_recording())\n       }\n         return (\n              <div className=\"App-1\" style={{\n                   backgroundColor: 'black',\n                   color: 'white',\n                   overflow: 'hidden',\n                  }}>\n                   <TopSpace height={topHeight} />\n                   <PlaceHolder color = {bgColor} textSize = {sizeString}/>\n                   <MiddleSpace height={midHeight} color = {bgColor}/>\n                   <AzureCaptions height={botHeight} textSize={sizeString} />\n                   <Captions height={0} textSize={sizeString} />\n                   {/* <DNDTest /> */}\n              </div>\n         )\n      }\n    } else {\n      if (checkAzureKey == true || isCorrectKey == true) {\n      if (isRecording == true) {\n        dispatch(flip_recording())\n      }\n        return (\n             <div className=\"App-2\" style={{\n                  backgroundColor: 'white',\n                  color: 'black',\n                  overflow: 'hidden',\n                 }}>\n                  <TopSpace height={topHeight} />\n                  <PlaceHolder color = {bgColor} textSize = {sizeString}/>\n                  <MiddleSpace height={midHeight} color = {bgColor}/>\n                  <AzureCaptions height={botHeight} textSize={sizeString} />\n                  <Captions height={0} textSize={sizeString} />\n                  {/* <DNDTest /> */}\n             </div>\n        )\n     }\n   }\n      // cases where azureKey is false but isrecording is not????\n\n      if (bgColor == 'black') {\n        if (isEnteredKey == true || isEnteredRegion == true) {\n          dispatch(flip_check_azureKey())\n          if (isRecording == true) {\n            dispatch(flip_recording())\n          }\n        }\n        return (\n            <div className=\"App-1\" style={{\n                 backgroundColor: 'black',\n                 color: 'white',\n                 overflow: 'hidden',\n\n                }}>\n                 <TopSpace height={topHeight} />\n                 <PlaceHolder color = {bgColor} textSize = {sizeString}/>\n\n                 <MiddleSpace height={midHeight} color = {bgColor}/>\n                 <Captions height={botHeight} textSize={sizeString} />\n\n\n                 {/* <DNDTest /> */}\n            </div>\n       )\n     } else {\n       return (\n            <div className=\"App-2\" style={{\n                 backgroundColor: 'white',\n                 color: 'black',\n                 overflow: 'hidden',\n\n                }}>\n                 <TopSpace height={topHeight} />\n                 <PlaceHolder color = {bgColor} textSize = {sizeString}/>\n\n                 <MiddleSpace height={midHeight} color = {bgColor}/>\n                 <Captions height={botHeight} textSize={sizeString} />\n                 {/* <DNDTest /> */}\n            </div>\n       )\n     }\n     // You can't comment in JSX.\n     // The style tag is the easiest way to set style based on JS variables.\n\n}\n","// THIS ENTIRE FILE, INCLUDING COMMENTS EXCEPT FOR THIS ONE, IS AUTOMATICALLY PROVIDED BY NPX\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\n\r\nconst textSizeReducer = (state = 6, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_TEXTSIZE':\r\n               return state + 1;\r\n          case 'DECREMENT_TEXTSIZE':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst lineWidthReducer = (state = 10, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_LINEWIDTH':\r\n               return Math.min(10, state + 1)\r\n          case 'DECREMENT_LINEWIDTH':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst numLinesReducer = (state = 4, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_NUMLINES':\r\n               return state + 1;\r\n          case 'DECREMENT_NUMLINES':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst lockScreenReducer = (state = false, action) => {\r\n     if (action.type === 'FLIP_LOCKSCREEN')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\nconst invertMicVisualReducer = (state = 0, action) => {\r\n  if (action.type === 'FLIP_MICVISUAL'){\r\n       state = state + 1;\r\n       if (state == 4) {\r\n            state = 0;\r\n       }\r\n  }\r\n  return state;\r\n}\r\n\r\nconst switchMenusReducer = (state = false, action) => {\r\n     if (action.type === 'FLIP_SWITCHMENUS')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\nconst invertColorsReducer = (state = false, action) => {\r\n     if (action.type === 'FLIP_INVERTCOLORS')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\nconst recordingReducer = (state = true, action) => {\r\n     if (action.type === 'FLIP_RECORDING')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst recordingAzureReducer = (state = true, action) =>{\r\n     if (action.type == 'FLIP_RECORDING_AZURE')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst switchToAzureReducer = (state = false, action) => {\r\n     if (action.type == 'SWITCH_TO_AZURE_REDUCER')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst enteredKeyReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_ENTERED_KEY')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst correctAzureKeyReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_CORRECT_AZUREKEY')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst checkAzureKeyReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_CHECK_AZUREKEY')\r\n          return !state\r\n     else return state\r\n}\r\n\r\n\r\nconst enteredRegionReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_ENTERED_REGION')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst instructionsReducer = (state = false, action) => {\r\n     if (action.type == 'FLIP_INSTRUCTIONS')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst menuhideReducer = (state = false, action) => {\r\n     if (action.type == 'FLIP_MENUHIDE')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst allReducers = combineReducers({\r\n     switchToAzure: switchToAzureReducer,\r\n     checkAzureKey: checkAzureKeyReducer,\r\n     correctAzureKey: correctAzureKeyReducer,\r\n     enteredRegion: enteredRegionReducer,\r\n     enteredKey: enteredKeyReducer,\r\n     textSize: textSizeReducer,\r\n     lineWidth: lineWidthReducer,\r\n     numLines: numLinesReducer,\r\n     lockScreen: lockScreenReducer,\r\n     invertColors: invertColorsReducer,\r\n     recording: recordingReducer,\r\n     mic: invertMicVisualReducer,\r\n     switchMenus: switchMenusReducer,\r\n     recordingAzure: recordingAzureReducer,\r\n     ins: instructionsReducer,\r\n     meh: menuhideReducer,\r\n\r\n});\r\n\r\nexport default allReducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport allReducers from './redux/reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(allReducers);\n\nReactDOM.render(\n     <Provider store={store}>\n          <App />\n     </Provider>,\n     document.getElementById('root')\n);\n\n// AUTOMATIC COMMENT PROVIDED BY NPX:\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}